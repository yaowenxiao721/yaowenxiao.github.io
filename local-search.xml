<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Intermediate-Representation</title>
    <link href="/2024/02/19/Intermediate-Representation/"/>
    <url>/2024/02/19/Intermediate-Representation/</url>
    
    <content type="html"><![CDATA[<h1 id="Compilers-and-Static-Analyzers"><a href="#Compilers-and-Static-Analyzers" class="headerlink" title="Compilers and Static Analyzers"></a>Compilers and Static Analyzers</h1><h2 id="1-Compiler"><a href="#1-Compiler" class="headerlink" title="1 - Compiler"></a>1 - Compiler</h2><p>Source Code -&gt; Scanner( 词法分析 ) -&gt; <em>Tokens</em> -&gt; Parser( 语法分析 ) -&gt; <em>AST</em> -&gt; Type Checker( 类型检查 ) -&gt; <em>Decorated AST</em> -&gt; Translatror -&gt; <em>IR</em> -&gt; Code Generator -&gt; Machine Code</p><p>静态分析需要在编译器前端生成的 IR 的基础上进行代码优化。</p><h1 id="AST-vs-IR"><a href="#AST-vs-IR" class="headerlink" title="AST vs. IR"></a>AST vs. IR</h1><img src="/images/Intermediate-Representation/AST-IR.png" alt="AST vs. IR"><h2 id="1-AST"><a href="#1-AST" class="headerlink" title="1 - AST"></a>1 - AST</h2><ul><li>high-level and closed to grammar structure</li><li>usually language dependent</li><li>suitable for fast type checking</li><li>suitable for fast type checking</li><li>lack of control flow information</li></ul><h1 id="IR-Three-Address-Code-3AC"><a href="#IR-Three-Address-Code-3AC" class="headerlink" title="IR:Three-Address Code( 3AC )"></a>IR:Three-Address Code( 3AC )</h1><h2 id="1-Intermediate-Representation-IR-“3-address”-form"><a href="#1-Intermediate-Representation-IR-“3-address”-form" class="headerlink" title="1 - Intermediate Representation( IR “3-address” form )"></a>1 - Intermediate Representation( IR “3-address” form )</h2><ul><li>low-level and closed to machine code</li><li>usually language independent</li><li>compact and uniform</li><li>contains control flow information</li><li><strong>usually considered as the basis for static analysis</strong></li></ul><h2 id="2-Some-Common-3AC-Forms"><a href="#2-Some-Common-3AC-Forms" class="headerlink" title="2 - Some Common 3AC Forms"></a>2 - Some Common 3AC Forms</h2><ul><li>x &#x3D; y <em>bop</em> z</li><li>x &#x3D; <em>uop</em> y</li><li>x &#x3D; y</li><li>goto L</li><li>if x goto L</li><li>if x rop y goto L</li></ul><h1 id="3AC-in-Real-Static-Analyzer-Soot"><a href="#3AC-in-Real-Static-Analyzer-Soot" class="headerlink" title="3AC in Real Static Analyzer: Soot"></a>3AC in Real Static Analyzer: Soot</h1><h2 id="1-Some-real-world-complicated-forms"><a href="#1-Some-real-world-complicated-forms" class="headerlink" title="1 - Some real-world complicated forms"></a>1 - Some real-world complicated forms</h2><p>Java Src</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> nju.sa.examples;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Class3AC</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">double</span> <span class="hljs-variable">pi</span> <span class="hljs-operator">=</span> <span class="hljs-number">3.14</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>3AC(jimple)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">nju</span>.sa.examples.Class3AC <span class="hljs-keyword">extends</span> <span class="hljs-title class_">java</span>.lang.Object<br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">double</span> pi;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> &lt;init&gt;()<br>    &#123;<br>        nju.sa.examples.Class3AC r0;<br>        r0 := <span class="hljs-meta">@this</span>: nju.sa.examples.Class3AC;<br>        specialinvoke r0.&lt;java,lang.Object: <span class="hljs-keyword">void</span> &lt;init&gt;()&gt;();<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(java.lang.String[])</span><br>    &#123;<br>        java.lang.String[] r0;<br>        r0 := <span class="hljs-meta">@parameter0</span>: java.lang.string[];<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> &lt;clinit&gt;()<br>    &#123;<br>        &lt;nju.sa.examples.Class3AC: <span class="hljs-type">double</span> pi&gt; = <span class="hljs-number">3.14</span>;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="Static-Single-Assignment-SSA-–-Optional-material"><a href="#Static-Single-Assignment-SSA-–-Optional-material" class="headerlink" title="Static Single Assignment ( SSA ) – Optional material"></a>Static Single Assignment ( SSA ) – <em>Optional material</em></h1><p>All assignments in SSA are to variables with distinct names<br><img src="/images/Intermediate-Representation/SSA.png" alt="SSA" width=400></p><h1 id="Basic-Blocks-BB"><a href="#Basic-Blocks-BB" class="headerlink" title="Basic Blocks( BB )"></a>Basic Blocks( BB )</h1><h1 id="Control-Flow-Graphs-CFG"><a href="#Control-Flow-Graphs-CFG" class="headerlink" title="Control Flow Graphs ( CFG )"></a>Control Flow Graphs ( CFG )</h1>]]></content>
    
    
    <categories>
      
      <category>Static Analysis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Intermediate-Representation</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Introduction</title>
    <link href="/2024/02/19/Introduction/"/>
    <url>/2024/02/19/Introduction/</url>
    
    <content type="html"><![CDATA[<h1 id="Static-Analysis"><a href="#Static-Analysis" class="headerlink" title="Static Analysis"></a>Static Analysis</h1><h2 id="1-Define"><a href="#1-Define" class="headerlink" title="1 - Define"></a>1 - Define</h2><p>静态分析通过分析程序 P 来推理其行为，并在运行 P 之前确定其是否满足某些属性。</p><blockquote><p>Static analysis analyzes a program P to reason about its behaviors and determines whether it satisfies some properties before running P.</p></blockquote><ul><li>Does P contain any private information leaks?</li><li>Does P dereference any null pointers?</li><li>Are all the cast operations in P safe?<br><em>- 是否存在强制类型转换异常？</em></li><li>Can v1 and v2 in P point to the same memory location?</li><li>Will certain assert staements in P fail?<br><em>- 是否存在 fail 的 assert 语句？</em></li><li>Is this piece of code in P dead(so that it could be eliminated?)<br><em>- 是否存在可以删除的死代码？</em></li></ul><h2 id="2-Rice’s-Theorem-莱斯定理"><a href="#2-Rice’s-Theorem-莱斯定理" class="headerlink" title="2 - Rice’s Theorem(莱斯定理)"></a>2 - Rice’s Theorem(莱斯定理)</h2><p>通俗的讲：不存在完美的静态分析方法(Perfect static analysis)。</p><blockquote><p>Perfect static &#x3D; Sound &amp; Complete</p></blockquote><img src="/images/Introduction/Sound-Complete.png" width=500 /><p>真正的有用的静态分析：妥协soundness或者completeness。</p><blockquote><p>Useful static analysis &#x3D; Compromise soundness OR Compromise completeness</p><blockquote><p>Compromise soundness:产生漏报( false negatives ) ( 可以接受 )<br>Compromise completeness:产生误报( false positives ) ( 不希望发生 )</p></blockquote></blockquote><h2 id="3-Static-Analysis-–Bird’s-Eye-View-整体概括"><a href="#3-Static-Analysis-–Bird’s-Eye-View-整体概括" class="headerlink" title="3 - Static Analysis –Bird’s Eye View( 整体概括 )"></a>3 - Static Analysis –Bird’s Eye View( 整体概括 )</h2><p>打破动态思维，从静态分析角度分析代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span>(input)<br>    x = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">else</span><br>    x = <span class="hljs-number">0</span>;<br>-&gt; x = ?<br></code></pre></td></tr></table></figure><p>Sound: x &#x3D; 0, 1, 2, 3<br>Unsound: x &#x3D; -1, 0</p><img src="/images/Introduction/Two-Results.png" width=300 /><p><strong>Static Analysis</strong>: ensure( or get close to )<em>soundness</em>, while making good trade-offs between analysis <em>precision</em> and analysis <em>speed</em>.</p><blockquote><p>在确保 soundness 的前提下，在分析的准确度和速度之间做出有效的平衡。</p></blockquote><h1 id="Two-Words-to-Conclude-Static-Analysis"><a href="#Two-Words-to-Conclude-Static-Analysis" class="headerlink" title="Two Words to Conclude Static Analysis"></a>Two Words to Conclude Static Analysis</h1><h2 id="1-Comprehension"><a href="#1-Comprehension" class="headerlink" title="1 - Comprehension"></a>1 - Comprehension</h2><p><strong>Abstraction + Over - approximation</strong></p><blockquote><p>Abstraction（ 抽象 ）：把具体域的值映射到抽象域的值。</p></blockquote><blockquote><p>Over - approximation（ 近似 ）：在抽象层面定义转移函数；由于无法枚举所有路径，所以使用 flow merging 处理 control flow。</p></blockquote><h1 id="Focus-of-this-section"><a href="#Focus-of-this-section" class="headerlink" title="Focus of this section"></a>Focus of this section</h1><ul><li>静态分析与（动态）测试的区别？</li><li>理解 soundness, completeness, false negatives 和 false positives 的概念</li><li>为什么静态分析需要保证 soundness？</li><li>怎样理解 abstraction 和 over-approximation？</li></ul>]]></content>
    
    
    <categories>
      
      <category>Static Analysis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Introduction</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Learning Markdown~</title>
    <link href="/2024/02/19/Learning-Markdown/"/>
    <url>/2024/02/19/Learning-Markdown/</url>
    
    <content type="html"><![CDATA[<h2 id="一、Markdonw"><a href="#一、Markdonw" class="headerlink" title="一、Markdonw"></a>一、Markdonw</h2><p>一款轻量级标记语言。</p><h2 id="二、语法"><a href="#二、语法" class="headerlink" title="二、语法"></a>二、语法</h2><h3 id="引用："><a href="#引用：" class="headerlink" title="引用："></a>引用：</h3><blockquote><p>这是一段引用。</p></blockquote><h3 id="列表："><a href="#列表：" class="headerlink" title="列表："></a>列表：</h3><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>把大象放进冰箱：</p><ol><li>打开冰箱。</li><li>把大象塞进冰箱。</li><li>关上冰箱。</li></ol><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><ul><li>Markdown</li><li>is</li><li>very</li><li>nice</li></ul><h3 id="Todo："><a href="#Todo：" class="headerlink" title="Todo："></a>Todo：</h3><ul><li><input disabled="" type="checkbox"> sleep</li><li><input checked="" disabled="" type="checkbox"> eat</li></ul><h3 id="代码块："><a href="#代码块：" class="headerlink" title="代码块："></a>代码块：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">main</span>() &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;Hello World&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="表格："><a href="#表格：" class="headerlink" title="表格："></a>表格：</h3><table><thead><tr><th align="left">姓名</th><th align="right">年龄</th><th align="center">成绩</th></tr></thead><tbody><tr><td align="left">张三</td><td align="right">16</td><td align="center">89</td></tr><tr><td align="left">李四</td><td align="right">17</td><td align="center">90</td></tr><tr><td align="left">王五</td><td align="right">17</td><td align="center">95</td></tr></tbody></table><h3 id="链接："><a href="#链接：" class="headerlink" title="链接："></a>链接：</h3><p><a href="github.com" title="代码开源网站">GitHub</a><br><a href="github.com" title="代码开源网站">github</a></p><h3 id="强调："><a href="#强调：" class="headerlink" title="强调："></a>强调：</h3><p><em>斜体</em>,加粗,<code>printf()</code>,:smile:,H<del>2</del>O,X^2^,&#x3D;&#x3D;高亮文字&#x3D;&#x3D;</p><h3 id="嵌入式代码："><a href="#嵌入式代码：" class="headerlink" title="嵌入式代码："></a>嵌入式代码：</h3><iframe src="//player.bilibili.com/player.html?aid=327623069&bvid=BV1JA411h7Gw&cid=171385214&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
    
    
    <categories>
      
      <category>Code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Guangyuan Bacchus Garden Lantern Festival</title>
    <link href="/2024/02/18/%E5%B9%BF%E5%85%83%E7%99%BE%E8%8D%89%E5%9B%AD%E7%81%AF%E4%BC%9A/"/>
    <url>/2024/02/18/%E5%B9%BF%E5%85%83%E7%99%BE%E8%8D%89%E5%9B%AD%E7%81%AF%E4%BC%9A/</url>
    
    <content type="html"><![CDATA[<img src="/images/广元百草园灯会/1.jpg"  /><img src="/images/广元百草园灯会/2.jpg"  /><img src="/images/广元百草园灯会/3.jpg"  /><img src="/images/广元百草园灯会/4.jpg"  /><img src="/images/广元百草园灯会/5.jpg"  /><img src="/images/广元百草园灯会/6.jpg"  /><img src="/images/广元百草园灯会/7.jpg"  /><img src="/images/广元百草园灯会/8.jpg"  /><img src="/images/广元百草园灯会/9.jpg"  /><img src="/images/广元百草园灯会/10.jpg"  /><img src="/images/广元百草园灯会/11.jpg"  /><img src="/images/广元百草园灯会/12.jpg"  /><img src="/images/广元百草园灯会/13.jpg"  />]]></content>
    
    
    <categories>
      
      <category>Others</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Lantern Festival</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/02/15/hello-world/"/>
    <url>/2024/02/15/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
